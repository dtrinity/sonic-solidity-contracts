#!/bin/sh
# Shared pre-push hook for dTrinity Hardhat projects

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "Running pre-push checks..."

# Get current branch
BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Skip checks for certain branches if needed
if [ "$BRANCH" = "wip" ] || [ "$BRANCH" = "tmp" ]; then
  echo "${YELLOW}Skipping pre-push checks for branch: $BRANCH${NC}"
  exit 0
fi

# Function to check if command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Run tests if available
if command_exists npx && [ -d "test" ]; then
  echo "Running tests..."

  # Check if shared test script exists
  if [ -f ".shared/scripts/testing/run-tests.ts" ]; then
    npx ts-node .shared/scripts/testing/run-tests.ts
  else
    npx hardhat test
  fi

  if [ $? -ne 0 ]; then
    echo "${RED}Tests failed. Please fix failing tests before pushing.${NC}"
    exit 1
  fi
fi

# Run Slither if available (only on main/master/develop branches)
if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ] || [ "$BRANCH" = "develop" ]; then
  if command_exists slither; then
    echo "Running Slither security analysis..."

    if [ -f ".shared/scripts/analysis/slither.ts" ]; then
      npx ts-node .shared/scripts/analysis/slither.ts --fail-on-high
    else
      slither . --fail-high 2>/dev/null
    fi

    if [ $? -ne 0 ]; then
      echo "${RED}High severity security issues found. Please fix them before pushing to $BRANCH.${NC}"
      exit 1
    fi
  fi
fi

# Check for sensitive information
echo "Checking for sensitive information..."

# Check for private keys
if git diff --cached --name-only | xargs grep -E "0x[a-fA-F0-9]{64}" 2>/dev/null; then
  echo "${RED}Potential private key detected in staged files!${NC}"
  echo "${YELLOW}If this is a test key, please move it to .env file.${NC}"
  exit 1
fi

# Check for .env files
if git diff --cached --name-only | grep -E "\.env" | grep -v ".env.example"; then
  echo "${RED}Attempting to commit .env file! This should never be committed.${NC}"
  exit 1
fi

# Check for API keys
if git diff --cached --name-only | xargs grep -iE "(api[_-]?key|apikey|api_secret|api[_-]?token)" 2>/dev/null | grep -v "// " | grep -v "# "; then
  echo "${YELLOW}Warning: Potential API key detected. Make sure this is not a real key.${NC}"
fi

echo "${GREEN}Pre-push checks passed!${NC}"
exit 0