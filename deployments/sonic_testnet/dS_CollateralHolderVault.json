{
  "address": "0xee98a3219f199E8405203FFC1170510040BBab6d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracleGetter",
          "name": "oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        }
      ],
      "name": "CannotWithdrawMoreValueThanDeposited",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "CollateralAlreadyAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "CollateralNotSupported",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "FailedToAddCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "FailedToRemoveCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseCurrencyUnit",
          "type": "uint256"
        }
      ],
      "name": "IncorrectBaseCurrencyUnit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustSupportAtLeastOneCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "NoOracleSupport",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "toMinCollateral",
          "type": "uint256"
        }
      ],
      "name": "ToCollateralAmountBelowMin",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "UnsupportedCollateral",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "CollateralAllowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "CollateralDisallowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "OracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_STRATEGY_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_WITHDRAWER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "allowCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "assetAmountFromValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "assetValueFromAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseCurrencyUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "disallowCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fromCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fromCollateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "toCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toCollateral",
          "type": "address"
        }
      ],
      "name": "exchangeCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fromCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fromCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toCollateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "toMinCollateral",
          "type": "uint256"
        }
      ],
      "name": "exchangeMaxCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "isCollateralSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listCollateral",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fromCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fromCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toCollateral",
          "type": "address"
        }
      ],
      "name": "maxExchangeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toCollateralAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracleGetter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBaseCurrencyUnit",
          "type": "uint256"
        }
      ],
      "name": "setBaseCurrencyUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracleGetter",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralAsset",
          "type": "address"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
  "receipt": {
    "to": null,
    "from": "0xd2f775Ff2cD41bfe43C7A8c016eD10393553fe44",
    "contractAddress": "0xee98a3219f199E8405203FFC1170510040BBab6d",
    "transactionIndex": 0,
    "gasUsed": "2527407",
    "logsBloom": "0x
    "blockHash": "0xe7aa8ad8e6edaa6781146e291ffdcafb2de26bc1240ad92fd8d097ed0e90ec0f",
    "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 26943480,
        "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
        "address": "0xee98a3219f199E8405203FFC1170510040BBab6d",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe7aa8ad8e6edaa6781146e291ffdcafb2de26bc1240ad92fd8d097ed0e90ec0f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 26943480,
        "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
        "address": "0xee98a3219f199E8405203FFC1170510040BBab6d",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x85e8f2d6819d6b24108062d87ea08f54651bcb8960d98062d3faf96e7873b8b9",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xe7aa8ad8e6edaa6781146e291ffdcafb2de26bc1240ad92fd8d097ed0e90ec0f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 26943480,
        "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
        "address": "0xee98a3219f199E8405203FFC1170510040BBab6d",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x1f29e81ed8f7ae439f042f6b6767d105e87c4eef908508d5d9e550aef35af644",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xe7aa8ad8e6edaa6781146e291ffdcafb2de26bc1240ad92fd8d097ed0e90ec0f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 26943480,
        "transactionHash": "0xccb06cc9592103e8698e6fffdb94a6c77f507eb9206bfbf781f2ff62d9126557",
        "address": "0xee98a3219f199E8405203FFC1170510040BBab6d",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x1a52e20da533a06a1f80a73dba6e5d09cb788f108eae685b8ce6644834e67abe",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xe7aa8ad8e6edaa6781146e291ffdcafb2de26bc1240ad92fd8d097ed0e90ec0f"
      }
    ],
    "blockNumber": 26943480,
    "cumulativeGasUsed": "2527407",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x88b394806536380D0a5232e7F69d661dBCDe8644"
  ],
  "numDeployments": 1,
  "solcInputHash": "601a421431a4d1b98bcec471579cced1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPriceOracleGetter\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"CannotWithdrawMoreValueThanDeposited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"CollateralAlreadyAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"CollateralNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"FailedToAddCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"FailedToRemoveCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"IncorrectBaseCurrencyUnit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustSupportAtLeastOneCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"NoOracleSupport\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toMinCollateral\",\"type\":\"uint256\"}],\"name\":\"ToCollateralAmountBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"UnsupportedCollateral\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"CollateralAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"CollateralDisallowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLATERAL_STRATEGY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLATERAL_WITHDRAWER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"allowCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"assetAmountFromValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"assetValueFromAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseCurrencyUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"disallowCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toCollateral\",\"type\":\"address\"}],\"name\":\"exchangeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toMinCollateral\",\"type\":\"uint256\"}],\"name\":\"exchangeMaxCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"isCollateralSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listCollateral\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toCollateral\",\"type\":\"address\"}],\"name\":\"maxExchangeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toCollateralAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracleGetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBaseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"setBaseCurrencyUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracleGetter\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"allowCollateral(address)\":{\"params\":{\"collateralAsset\":\"The address of the collateral asset\"}},\"assetAmountFromValue(uint256,address)\":{\"params\":{\"asset\":\"The address of the asset\",\"baseValue\":\"The base value\"},\"returns\":{\"assetAmount\":\"The amount of the asset\"}},\"assetValueFromAmount(uint256,address)\":{\"params\":{\"asset\":\"The address of the asset\",\"assetAmount\":\"The amount of the asset\"},\"returns\":{\"baseValue\":\"The base value of the asset\"}},\"deposit(uint256,address)\":{\"params\":{\"collateralAmount\":\"The amount of collateral to deposit\",\"collateralAsset\":\"The address of the collateral asset\"}},\"disallowCollateral(address)\":{\"details\":\"Requires at least one collateral asset to remain supported\",\"params\":{\"collateralAsset\":\"The address of the collateral asset to disallow\"}},\"exchangeCollateral(uint256,address,uint256,address)\":{\"details\":\"Ensures the exchange maintains equivalent value using oracle prices\",\"params\":{\"fromCollateral\":\"Address of the source collateral token\",\"fromCollateralAmount\":\"Amount of collateral to exchange from\",\"toCollateral\":\"Address of the destination collateral token\",\"toCollateralAmount\":\"Amount of collateral to receive\"}},\"exchangeMaxCollateral(uint256,address,address,uint256)\":{\"details\":\"Calculates and executes the maximum possible exchange while respecting minimum amount\",\"params\":{\"fromCollateral\":\"Address of the source collateral token\",\"fromCollateralAmount\":\"Amount of collateral to exchange from\",\"toCollateral\":\"Address of the destination collateral token\",\"toMinCollateral\":\"Minimum amount of destination collateral to receive\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCollateralSupported(address)\":{\"params\":{\"collateralAsset\":\"The address of the collateral asset to check\"},\"returns\":{\"_0\":\"bool True if the asset is supported, false otherwise\"}},\"listCollateral()\":{\"returns\":{\"_0\":\"address[] Array of collateral asset addresses\"}},\"maxExchangeAmount(uint256,address,address)\":{\"details\":\"Uses oracle prices and token decimals to maintain equivalent value\",\"params\":{\"fromCollateral\":\"Address of the source collateral token\",\"fromCollateralAmount\":\"Amount of source collateral\",\"toCollateral\":\"Address of the destination collateral token\"},\"returns\":{\"toCollateralAmount\":\"The maximum amount of destination collateral that can be received\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBaseCurrencyUnit(uint256)\":{\"details\":\"Only used if the oracle's base currency unit changes\",\"params\":{\"_newBaseCurrencyUnit\":\"The new base currency unit to set\"}},\"setOracle(address)\":{\"params\":{\"newOracle\":\"The new oracle to use\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalValue()\":{\"returns\":{\"baseValue\":\"The total value of all collateral in base\"}},\"withdraw(uint256,address)\":{\"params\":{\"collateralAmount\":\"The amount of collateral to withdraw\",\"collateralAsset\":\"The address of the collateral asset\"}},\"withdrawTo(address,uint256,address)\":{\"params\":{\"collateralAmount\":\"The amount of collateral to withdraw\",\"collateralAsset\":\"The address of the collateral asset\",\"recipient\":\"The address receiving the collateral\"}}},\"title\":\"CollateralHolderVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowCollateral(address)\":{\"notice\":\"Allows a new collateral asset\"},\"assetAmountFromValue(uint256,address)\":{\"notice\":\"Calculates the amount of an asset that corresponds to a given base value\"},\"assetValueFromAmount(uint256,address)\":{\"notice\":\"Calculates the base value of a given amount of an asset\"},\"deposit(uint256,address)\":{\"notice\":\"Deposit collateral into the vault\"},\"disallowCollateral(address)\":{\"notice\":\"Disallows a previously supported collateral asset\"},\"exchangeCollateral(uint256,address,uint256,address)\":{\"notice\":\"Exchanges one type of collateral for another\"},\"exchangeMaxCollateral(uint256,address,address,uint256)\":{\"notice\":\"Exchanges collateral for the maximum possible amount of another collateral\"},\"isCollateralSupported(address)\":{\"notice\":\"Checks if a given asset is supported as collateral\"},\"listCollateral()\":{\"notice\":\"Returns a list of all supported collateral assets\"},\"maxExchangeAmount(uint256,address,address)\":{\"notice\":\"Calculates the maximum amount of destination collateral that can be received\"},\"setBaseCurrencyUnit(uint256)\":{\"notice\":\"Updates the base currency unit used for price calculations\"},\"setOracle(address)\":{\"notice\":\"Sets the oracle to use for collateral valuation\"},\"totalValue()\":{\"notice\":\"Calculates the total value of all collateral in the vault\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws collateral from the vault\"},\"withdrawTo(address,uint256,address)\":{\"notice\":\"Withdraws collateral from the vault to a specific address\"}},\"notice\":\"Implementation of CollateralVault for only holding tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dstable/CollateralHolderVault.sol\":\"CollateralHolderVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        assembly (\\\"memory-safe\\\") {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly (\\\"memory-safe\\\") {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly (\\\"memory-safe\\\") {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\"},\"contracts/common/DTrinityOracleConstants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nlibrary DTrinityOracleConstants {\\n    uint32 public constant ORACLE_BASE_CURRENCY_UNIT = 1e8;\\n}\\n\",\"keccak256\":\"0xe1ef781f664f9d13561ddbb02cc566deaab9a0359f83ad4120c63b7bd5f62c3a\",\"license\":\"MIT\"},\"contracts/common/IAaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IPriceOracleGetter\\n * @author Aave\\n * @notice Interface for the Aave price oracle.\\n */\\ninterface IPriceOracleGetter {\\n    /**\\n     * @notice Returns the base currency address\\n     * @dev Address 0x0 is reserved for USD as base currency.\\n     * @return Returns the base currency address.\\n     */\\n    function BASE_CURRENCY() external view returns (address);\\n\\n    /**\\n     * @notice Returns the base currency unit\\n     * @dev 1 ether for ETH, 1e8 for USD.\\n     * @return Returns the base currency unit.\\n     */\\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns the asset price in the base currency\\n     * @param asset The address of the asset\\n     * @return The price of the asset\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xdaaa39d40743c1306595754057491f3d91e6cf9bc018d6b6d32b16ed57c9d313\",\"license\":\"AGPL-3.0\"},\"contracts/dstable/CollateralHolderVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"./CollateralVault.sol\\\";\\n\\n/**\\n * @title CollateralHolderVault\\n * @notice Implementation of CollateralVault for only holding tokens\\n */\\ncontract CollateralHolderVault is CollateralVault {\\n    using SafeERC20 for IERC20Metadata;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    /* Errors */\\n    error CannotWithdrawMoreValueThanDeposited(\\n        uint256 requestedAmount,\\n        uint256 maxAmount\\n    );\\n    error ToCollateralAmountBelowMin(\\n        uint256 toCollateralAmount,\\n        uint256 toMinCollateral\\n    );\\n\\n    constructor(IPriceOracleGetter oracle) CollateralVault(oracle) {}\\n\\n    /**\\n     * @notice Exchanges one type of collateral for another\\n     * @param fromCollateralAmount Amount of collateral to exchange from\\n     * @param fromCollateral Address of the source collateral token\\n     * @param toCollateralAmount Amount of collateral to receive\\n     * @param toCollateral Address of the destination collateral token\\n     * @dev Ensures the exchange maintains equivalent value using oracle prices\\n     */\\n    function exchangeCollateral(\\n        uint256 fromCollateralAmount,\\n        address fromCollateral,\\n        uint256 toCollateralAmount,\\n        address toCollateral\\n    ) public onlyRole(COLLATERAL_STRATEGY_ROLE) {\\n        // We must take in a collateral that is supported\\n        require(\\n            _supportedCollaterals.contains(toCollateral),\\n            \\\"Unsupported collateral\\\"\\n        );\\n        uint256 maxAmount = maxExchangeAmount(\\n            fromCollateralAmount,\\n            fromCollateral,\\n            toCollateral\\n        );\\n        if (toCollateralAmount > maxAmount) {\\n            revert CannotWithdrawMoreValueThanDeposited(\\n                toCollateralAmount,\\n                maxAmount\\n            );\\n        }\\n\\n        IERC20Metadata(fromCollateral).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            fromCollateralAmount\\n        );\\n        IERC20Metadata(toCollateral).safeTransfer(\\n            msg.sender,\\n            toCollateralAmount\\n        );\\n    }\\n\\n    /**\\n     * @notice Exchanges collateral for the maximum possible amount of another collateral\\n     * @param fromCollateralAmount Amount of collateral to exchange from\\n     * @param fromCollateral Address of the source collateral token\\n     * @param toCollateral Address of the destination collateral token\\n     * @param toMinCollateral Minimum amount of destination collateral to receive\\n     * @dev Calculates and executes the maximum possible exchange while respecting minimum amount\\n     */\\n    function exchangeMaxCollateral(\\n        uint256 fromCollateralAmount,\\n        address fromCollateral,\\n        address toCollateral,\\n        uint256 toMinCollateral\\n    ) public onlyRole(COLLATERAL_STRATEGY_ROLE) {\\n        uint256 toCollateralAmount = maxExchangeAmount(\\n            fromCollateralAmount,\\n            fromCollateral,\\n            toCollateral\\n        );\\n        if (toCollateralAmount < toMinCollateral) {\\n            revert ToCollateralAmountBelowMin(\\n                toCollateralAmount,\\n                toMinCollateral\\n            );\\n        }\\n        exchangeCollateral(\\n            fromCollateralAmount,\\n            fromCollateral,\\n            toCollateralAmount,\\n            toCollateral\\n        );\\n    }\\n\\n    /**\\n     * @notice Calculates the maximum amount of destination collateral that can be received\\n     * @param fromCollateralAmount Amount of source collateral\\n     * @param fromCollateral Address of the source collateral token\\n     * @param toCollateral Address of the destination collateral token\\n     * @return toCollateralAmount The maximum amount of destination collateral that can be received\\n     * @dev Uses oracle prices and token decimals to maintain equivalent value\\n     */\\n    function maxExchangeAmount(\\n        uint256 fromCollateralAmount,\\n        address fromCollateral,\\n        address toCollateral\\n    ) public view returns (uint256 toCollateralAmount) {\\n        uint256 fromCollateralPrice = oracle.getAssetPrice(fromCollateral);\\n        uint256 toCollateralPrice = oracle.getAssetPrice(toCollateral);\\n\\n        uint8 fromCollateralDecimals = IERC20Metadata(fromCollateral)\\n            .decimals();\\n        uint8 toCollateralDecimals = IERC20Metadata(toCollateral).decimals();\\n\\n        uint256 fromCollateralBaseValue = (fromCollateralPrice *\\n            fromCollateralAmount) / (10 ** fromCollateralDecimals);\\n\\n        toCollateralAmount =\\n            (fromCollateralBaseValue * (10 ** toCollateralDecimals)) /\\n            toCollateralPrice;\\n\\n        return toCollateralAmount;\\n    }\\n\\n    /**\\n     * @notice Calculates the total value of all collateral in the vault\\n     * @return baseValue The total value of all collateral in base\\n     */\\n    function totalValue() public view override returns (uint256 baseValue) {\\n        return _totalValueOfSupportedCollaterals();\\n    }\\n}\\n\",\"keccak256\":\"0xd4256335139a0a59d1260a27d11af10363750aa757352165b3ec2cdc95dc28bb\",\"license\":\"MIT\"},\"contracts/dstable/CollateralVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\n\\nimport \\\"contracts/common/DTrinityOracleConstants.sol\\\";\\nimport \\\"contracts/common/IAaveOracle.sol\\\";\\nimport \\\"./OracleAware.sol\\\";\\n\\n/**\\n * @title CollateralVault\\n * @notice Abstract contract for any contract that manages collateral assets\\n\\\\ */\\nabstract contract CollateralVault is AccessControl, OracleAware {\\n    using SafeERC20 for IERC20Metadata;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    /* Core state */\\n\\n    EnumerableSet.AddressSet internal _supportedCollaterals;\\n\\n    /* Events */\\n\\n    event CollateralAllowed(address indexed collateralAsset);\\n    event CollateralDisallowed(address indexed collateralAsset);\\n\\n    /* Roles */\\n\\n    bytes32 public constant COLLATERAL_MANAGER_ROLE =\\n        keccak256(\\\"COLLATERAL_MANAGER_ROLE\\\");\\n    bytes32 public constant COLLATERAL_STRATEGY_ROLE =\\n        keccak256(\\\"COLLATERAL_STRATEGY_ROLE\\\");\\n    bytes32 public constant COLLATERAL_WITHDRAWER_ROLE =\\n        keccak256(\\\"COLLATERAL_WITHDRAWER_ROLE\\\");\\n\\n    /* Errors */\\n    error UnsupportedCollateral(address collateralAsset);\\n    error CollateralAlreadyAllowed(address collateralAsset);\\n    error NoOracleSupport(address collateralAsset);\\n    error FailedToAddCollateral(address collateralAsset);\\n    error CollateralNotSupported(address collateralAsset);\\n    error MustSupportAtLeastOneCollateral();\\n    error FailedToRemoveCollateral(address collateralAsset);\\n\\n    /**\\n     * @notice Initializes the vault with an oracle and sets up initial roles\\n     * @dev Grants all roles to the contract deployer initially\\n     * @param oracle The price oracle to use for collateral valuation\\n     */\\n    constructor(\\n        IPriceOracleGetter oracle\\n    ) OracleAware(oracle, DTrinityOracleConstants.ORACLE_BASE_CURRENCY_UNIT) {\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); // This is the super admin\\n        grantRole(COLLATERAL_MANAGER_ROLE, msg.sender);\\n        grantRole(COLLATERAL_WITHDRAWER_ROLE, msg.sender);\\n        grantRole(COLLATERAL_STRATEGY_ROLE, msg.sender);\\n    }\\n\\n    /* Deposit */\\n\\n    /**\\n     * @notice Deposit collateral into the vault\\n     * @param collateralAmount The amount of collateral to deposit\\n     * @param collateralAsset The address of the collateral asset\\n     */\\n    function deposit(uint256 collateralAmount, address collateralAsset) public {\\n        if (!_supportedCollaterals.contains(collateralAsset)) {\\n            revert UnsupportedCollateral(collateralAsset);\\n        }\\n\\n        IERC20Metadata(collateralAsset).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            collateralAmount\\n        );\\n    }\\n\\n    /* Withdrawal */\\n\\n    /**\\n     * @notice Withdraws collateral from the vault\\n     * @param collateralAmount The amount of collateral to withdraw\\n     * @param collateralAsset The address of the collateral asset\\n     */\\n    function withdraw(\\n        uint256 collateralAmount,\\n        address collateralAsset\\n    ) public onlyRole(COLLATERAL_WITHDRAWER_ROLE) {\\n        return _withdraw(msg.sender, collateralAmount, collateralAsset);\\n    }\\n\\n    /**\\n     * @notice Withdraws collateral from the vault to a specific address\\n     * @param recipient The address receiving the collateral\\n     * @param collateralAmount The amount of collateral to withdraw\\n     * @param collateralAsset The address of the collateral asset\\n     */\\n    function withdrawTo(\\n        address recipient,\\n        uint256 collateralAmount,\\n        address collateralAsset\\n    ) public onlyRole(COLLATERAL_WITHDRAWER_ROLE) {\\n        return _withdraw(recipient, collateralAmount, collateralAsset);\\n    }\\n\\n    /**\\n     * @notice Internal function to withdraw collateral from the vault\\n     * @param withdrawer The address withdrawing the collateral\\n     * @param collateralAmount The amount of collateral to withdraw\\n     * @param collateralAsset The address of the collateral asset\\n     */\\n    function _withdraw(\\n        address withdrawer,\\n        uint256 collateralAmount,\\n        address collateralAsset\\n    ) internal {\\n        IERC20Metadata(collateralAsset).safeTransfer(\\n            withdrawer,\\n            collateralAmount\\n        );\\n    }\\n\\n    /* Collateral Info */\\n\\n    /**\\n     * @notice Calculates the total value of all assets in the vault\\n     * @return baseValue The total value of all assets in base\\n     */\\n    function totalValue() public view virtual returns (uint256 baseValue);\\n\\n    /**\\n     * @notice Calculates the base value of a given amount of an asset\\n     * @param assetAmount The amount of the asset\\n     * @param asset The address of the asset\\n     * @return baseValue The base value of the asset\\n     */\\n    function assetValueFromAmount(\\n        uint256 assetAmount,\\n        address asset\\n    ) public view returns (uint256 baseValue) {\\n        uint256 assetPrice = oracle.getAssetPrice(asset);\\n        uint8 assetDecimals = IERC20Metadata(asset).decimals();\\n        return (assetPrice * assetAmount) / (10 ** assetDecimals);\\n    }\\n\\n    /**\\n     * @notice Calculates the amount of an asset that corresponds to a given base value\\n     * @param baseValue The base value\\n     * @param asset The address of the asset\\n     * @return assetAmount The amount of the asset\\n     */\\n    function assetAmountFromValue(\\n        uint256 baseValue,\\n        address asset\\n    ) public view returns (uint256 assetAmount) {\\n        uint256 assetPrice = oracle.getAssetPrice(asset);\\n        uint8 assetDecimals = IERC20Metadata(asset).decimals();\\n        return (baseValue * (10 ** assetDecimals)) / assetPrice;\\n    }\\n\\n    /* Collateral management */\\n\\n    /**\\n     * @notice Allows a new collateral asset\\n     * @param collateralAsset The address of the collateral asset\\n     */\\n    function allowCollateral(\\n        address collateralAsset\\n    ) public onlyRole(COLLATERAL_MANAGER_ROLE) {\\n        if (_supportedCollaterals.contains(collateralAsset)) {\\n            revert CollateralAlreadyAllowed(collateralAsset);\\n        }\\n        if (oracle.getAssetPrice(collateralAsset) == 0) {\\n            revert NoOracleSupport(collateralAsset);\\n        }\\n        if (!_supportedCollaterals.add(collateralAsset)) {\\n            revert FailedToAddCollateral(collateralAsset);\\n        }\\n        emit CollateralAllowed(collateralAsset);\\n    }\\n\\n    /**\\n     * @notice Disallows a previously supported collateral asset\\n     * @dev Requires at least one collateral asset to remain supported\\n     * @param collateralAsset The address of the collateral asset to disallow\\n     */\\n    function disallowCollateral(\\n        address collateralAsset\\n    ) public onlyRole(COLLATERAL_MANAGER_ROLE) {\\n        if (!_supportedCollaterals.contains(collateralAsset)) {\\n            revert CollateralNotSupported(collateralAsset);\\n        }\\n        if (_supportedCollaterals.length() <= 1) {\\n            revert MustSupportAtLeastOneCollateral();\\n        }\\n        if (!_supportedCollaterals.remove(collateralAsset)) {\\n            revert FailedToRemoveCollateral(collateralAsset);\\n        }\\n\\n        emit CollateralDisallowed(collateralAsset);\\n    }\\n\\n    /**\\n     * @notice Checks if a given asset is supported as collateral\\n     * @param collateralAsset The address of the collateral asset to check\\n     * @return bool True if the asset is supported, false otherwise\\n     */\\n    function isCollateralSupported(\\n        address collateralAsset\\n    ) public view returns (bool) {\\n        return _supportedCollaterals.contains(collateralAsset);\\n    }\\n\\n    /**\\n     * @notice Returns a list of all supported collateral assets\\n     * @return address[] Array of collateral asset addresses\\n     */\\n    function listCollateral() public view returns (address[] memory) {\\n        return _supportedCollaterals.values();\\n    }\\n\\n    /**\\n     * @notice Calculates the total base value of all supported collateral assets in the vault\\n     * @dev Iterates through all supported collaterals and sums their base values\\n     * @return uint256 The total value in base\\n     */\\n    function _totalValueOfSupportedCollaterals()\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 totalBaseValue = 0;\\n        for (uint256 i = 0; i < _supportedCollaterals.length(); i++) {\\n            address collateral = _supportedCollaterals.at(i);\\n            uint256 collateralPrice = oracle.getAssetPrice(collateral);\\n            uint8 collateralDecimals = IERC20Metadata(collateral).decimals();\\n            uint256 collateralValue = (collateralPrice *\\n                IERC20Metadata(collateral).balanceOf(address(this))) /\\n                (10 ** collateralDecimals);\\n            totalBaseValue += collateralValue;\\n        }\\n        return totalBaseValue;\\n    }\\n}\\n\",\"keccak256\":\"0x45d8c2fc5f6afadab0b3db803de1cf85726014a7afcc3507781b10e888071a3f\",\"license\":\"MIT\"},\"contracts/dstable/OracleAware.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"contracts/common/IAaveOracle.sol\\\";\\n\\n/**\\n * @title OracleAware\\n * @notice Abstract contract that provides oracle functionality to other contracts\\n */\\nabstract contract OracleAware is AccessControl {\\n    /* Core state */\\n\\n    IPriceOracleGetter public oracle;\\n    uint256 public baseCurrencyUnit;\\n\\n    /* Events */\\n\\n    event OracleSet(address indexed newOracle);\\n\\n    /* Errors */\\n\\n    error IncorrectBaseCurrencyUnit(uint256 baseCurrencyUnit);\\n\\n    /**\\n     * @notice Initializes the contract with an oracle and base currency unit\\n     * @param initialOracle The initial oracle to use for price feeds\\n     * @param _baseCurrencyUnit The base currency unit for price calculations\\n     * @dev Sets up the initial oracle and base currency unit values\\n     */\\n    constructor(IPriceOracleGetter initialOracle, uint256 _baseCurrencyUnit) {\\n        oracle = initialOracle;\\n        baseCurrencyUnit = _baseCurrencyUnit;\\n\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Sets the oracle to use for collateral valuation\\n     * @param newOracle The new oracle to use\\n     */\\n    function setOracle(\\n        IPriceOracleGetter newOracle\\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (newOracle.BASE_CURRENCY_UNIT() != baseCurrencyUnit) {\\n            revert IncorrectBaseCurrencyUnit(baseCurrencyUnit);\\n        }\\n\\n        oracle = newOracle;\\n\\n        emit OracleSet(address(newOracle));\\n    }\\n\\n    /**\\n     * @notice Updates the base currency unit used for price calculations\\n     * @param _newBaseCurrencyUnit The new base currency unit to set\\n     * @dev Only used if the oracle's base currency unit changes\\n     */\\n    function setBaseCurrencyUnit(\\n        uint256 _newBaseCurrencyUnit\\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        baseCurrencyUnit = _newBaseCurrencyUnit;\\n    }\\n}\\n\",\"keccak256\":\"0x975283a2180ef00c975545f74e347f9e6bffcff3b5ac1f05a3391d5a897bad13\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c80637adbf973116100f9578063c4e2c1e611610097578063d547741f11610071578063d547741f146104a3578063e00cb4a5146104bf578063f3bddde1146104ef578063fa6bd2ee1461050d576101a8565b8063c4e2c1e61461044b578063cf07456f14610467578063d4c3eea014610485576101a8565b8063847b39d7116100d3578063847b39d7146103b157806391d14854146103e1578063a217fddf14610411578063a4e2a31e1461042f576101a8565b80637adbf9731461035b5780637dc0d1d01461037757806383f1077714610395576101a8565b80632f2ff15d1161016657806345daa27b1161014057806345daa27b146102d55780634a0bbabb146102f35780635c23ef6e1461030f5780636e553f651461033f576101a8565b80632f2ff15d14610281578063339b55151461029d57806336568abe146102b9576101a8565b8062f714ce146101ad57806301ffc9a7146101c9578063132c29b2146101f95780631ee903b614610217578063248a9ca3146102335780632e718ab714610263575b600080fd5b6101c760048036038101906101c29190611eb3565b61053d565b005b6101e360048036038101906101de9190611f4b565b610577565b6040516101f09190611f93565b60405180910390f35b6102016105f1565b60405161020e9190611fc7565b60405180910390f35b610231600480360381019061022c9190611fe2565b610615565b005b61024d6004803603810190610248919061203b565b610773565b60405161025a9190611fc7565b60405180910390f35b61026b610792565b6040516102789190611fc7565b60405180910390f35b61029b60048036038101906102969190612068565b6107b6565b005b6102b760048036038101906102b291906120a8565b6107d8565b005b6102d360048036038101906102ce9190612068565b61090b565b005b6102dd610986565b6040516102ea9190611fc7565b60405180910390f35b61030d6004803603810190610308919061210f565b6109aa565b005b61032960048036038101906103249190611eb3565b6109c2565b604051610336919061214b565b60405180910390f35b61035960048036038101906103549190611eb3565b610b03565b005b610375600480360381019061037091906121a4565b610b89565b005b61037f610cd4565b60405161038c9190612230565b60405180910390f35b6103af60048036038101906103aa919061224b565b610cfa565b005b6103cb60048036038101906103c691906122b2565b610d8e565b6040516103d8919061214b565b60405180910390f35b6103fb60048036038101906103f69190612068565b61100d565b6040516104089190611f93565b60405180910390f35b610419611077565b6040516104269190611fc7565b60405180910390f35b61044960048036038101906104449190611fe2565b61107e565b005b61046560048036038101906104609190612305565b61127a565b005b61046f6112b5565b60405161047c9190612416565b60405180910390f35b61048d6112c6565b60405161049a919061214b565b60405180910390f35b6104bd60048036038101906104b89190612068565b6112d5565b005b6104d960048036038101906104d49190611eb3565b6112f7565b6040516104e6919061214b565b60405180910390f35b6104f7611438565b604051610504919061214b565b60405180910390f35b61052760048036038101906105229190611fe2565b61143e565b6040516105349190611f93565b60405180910390f35b7f1f29e81ed8f7ae439f042f6b6767d105e87c4eef908508d5d9e550aef35af6446105678161145b565b61057233848461146f565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ea57506105e98261149f565b5b9050919050565b7f1a52e20da533a06a1f80a73dba6e5d09cb788f108eae685b8ce6644834e67abe81565b7f85e8f2d6819d6b24108062d87ea08f54651bcb8960d98062d3faf96e7873b8b961063f8161145b565b61065382600361150990919063ffffffff16565b61069457816040517f2108722b00000000000000000000000000000000000000000000000000000000815260040161068b9190612447565b60405180910390fd5b60016106a06003611539565b116106d7576040517f0b78e84a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106eb82600361154e90919063ffffffff16565b61072c57816040517fc89c7bae0000000000000000000000000000000000000000000000000000000081526004016107239190612447565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fcebbf63022189259f517d89d98c7c527b44c211d25e443dad13aab2479c7e7b360405160405180910390a25050565b6000806000838152602001908152602001600020600101549050919050565b7f85e8f2d6819d6b24108062d87ea08f54651bcb8960d98062d3faf96e7873b8b981565b6107bf82610773565b6107c88161145b565b6107d2838361157e565b50505050565b7f1a52e20da533a06a1f80a73dba6e5d09cb788f108eae685b8ce6644834e67abe6108028161145b565b61081682600361150990919063ffffffff16565b610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c906124bf565b60405180910390fd5b6000610862868685610d8e565b9050808411156108ab5783816040517f94d08ba70000000000000000000000000000000000000000000000000000000081526004016108a29291906124df565b60405180910390fd5b6108d83330888873ffffffffffffffffffffffffffffffffffffffff1661166f909392919063ffffffff16565b61090333858573ffffffffffffffffffffffffffffffffffffffff166116f19092919063ffffffff16565b505050505050565b610913611770565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610977576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109818282611778565b505050565b7f1f29e81ed8f7ae439f042f6b6767d105e87c4eef908508d5d9e550aef35af64481565b6000801b6109b78161145b565b816002819055505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07846040518263ffffffff1660e01b8152600401610a209190612447565b602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a61919061251d565b905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190612583565b90508181600a610ae49190612712565b86610aef919061275d565b610af991906127ce565b9250505092915050565b610b1781600361150990919063ffffffff16565b610b5857806040517f4ec5327e000000000000000000000000000000000000000000000000000000008152600401610b4f9190612447565b60405180910390fd5b610b853330848473ffffffffffffffffffffffffffffffffffffffff1661166f909392919063ffffffff16565b5050565b6000801b610b968161145b565b6002548273ffffffffffffffffffffffffffffffffffffffff16638c89b64f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c08919061251d565b14610c4c576002546040517f9b6812b9000000000000000000000000000000000000000000000000000000008152600401610c43919061214b565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f3f32684a32a11dabdbb8c0177de80aa3ae36a004d75210335b49e544e48cd0aa60405160405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f1a52e20da533a06a1f80a73dba6e5d09cb788f108eae685b8ce6644834e67abe610d248161145b565b6000610d31868686610d8e565b905082811015610d7a5780836040517f61fee8b2000000000000000000000000000000000000000000000000000000008152600401610d719291906124df565b60405180910390fd5b610d86868683876107d8565b505050505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07856040518263ffffffff1660e01b8152600401610dec9190612447565b602060405180830381865afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d919061251d565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07856040518263ffffffff1660e01b8152600401610e8c9190612447565b602060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd919061251d565b905060008573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f409190612583565b905060008573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb39190612583565b9050600082600a610fc49190612712565b8986610fd0919061275d565b610fda91906127ce565b90508382600a610fea9190612712565b82610ff5919061275d565b610fff91906127ce565b955050505050509392505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b7f85e8f2d6819d6b24108062d87ea08f54651bcb8960d98062d3faf96e7873b8b96110a88161145b565b6110bc82600361150990919063ffffffff16565b156110fe57816040517f263e24fc0000000000000000000000000000000000000000000000000000000081526004016110f59190612447565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07846040518263ffffffff1660e01b815260040161115b9190612447565b602060405180830381865afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c919061251d565b036111de57816040517f83364b180000000000000000000000000000000000000000000000000000000081526004016111d59190612447565b60405180910390fd5b6111f282600361186a90919063ffffffff16565b61123357816040517fcdb5999500000000000000000000000000000000000000000000000000000000815260040161122a9190612447565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f500f8acd525a3d9f96ab641587f59e34ef9d02f9397fdd46bb7786273bad160760405160405180910390a25050565b7f1f29e81ed8f7ae439f042f6b6767d105e87c4eef908508d5d9e550aef35af6446112a48161145b565b6112af84848461146f565b50505050565b60606112c1600361189a565b905090565b60006112d06118bb565b905090565b6112de82610773565b6112e78161145b565b6112f18383611778565b50505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07846040518263ffffffff1660e01b81526004016113559190612447565b602060405180830381865afa158015611372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611396919061251d565b905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114099190612583565b905080600a6114189190612712565b8583611424919061275d565b61142e91906127ce565b9250505092915050565b60025481565b600061145482600361150990919063ffffffff16565b9050919050565b61146c81611467611770565b611ace565b50565b61149a83838373ffffffffffffffffffffffffffffffffffffffff166116f19092919063ffffffff16565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000611531836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b1f565b905092915050565b600061154782600001611b42565b9050919050565b6000611576836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b53565b905092915050565b600061158a838361100d565b61166457600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611601611770565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611669565b600090505b92915050565b6116eb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016116a4939291906127ff565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c67565b50505050565b61176b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611724929190612836565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c67565b505050565b600033905090565b6000611784838361100d565b1561185f57600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506117fc611770565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611864565b600090505b92915050565b6000611892836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d09565b905092915050565b606060006118aa83600001611d79565b905060608190508092505050919050565b6000806000905060005b6118cf6003611539565b811015611ac65760006118ec826003611dd590919063ffffffff16565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07836040518263ffffffff1660e01b815260040161194b9190612447565b602060405180830381865afa158015611968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198c919061251d565b905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff9190612583565b9050600081600a611a109190612712565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a499190612447565b602060405180830381865afa158015611a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8a919061251d565b84611a95919061275d565b611a9f91906127ce565b90508086611aad919061285f565b9550505050508080611abe90612893565b9150506118c5565b508091505090565b611ad8828261100d565b611b1b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611b129291906128db565b60405180910390fd5b5050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611c5b576000600182611b859190612904565b9050600060018660000180549050611b9d9190612904565b9050808214611c0c576000866000018281548110611bbe57611bbd612938565b5b9060005260206000200154905080876000018481548110611be257611be1612938565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611c2057611c1f612967565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611c61565b60009150505b92915050565b600080602060008451602086016000885af180611c8a576040513d6000823e3d81fd5b3d925060005191505060008214611ca5576001811415611cc1565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611d0357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611cfa9190612447565b60405180910390fd5b50505050565b6000611d158383611b1f565b611d6e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611d73565b600090505b92915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611dc957602002820191906000526020600020905b815481526020019060010190808311611db5575b50505050509050919050565b6000611de48360000183611def565b60001c905092915050565b6000826000018281548110611e0757611e06612938565b5b9060005260206000200154905092915050565b600080fd5b6000819050919050565b611e3281611e1f565b8114611e3d57600080fd5b50565b600081359050611e4f81611e29565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e8082611e55565b9050919050565b611e9081611e75565b8114611e9b57600080fd5b50565b600081359050611ead81611e87565b92915050565b60008060408385031215611eca57611ec9611e1a565b5b6000611ed885828601611e40565b9250506020611ee985828601611e9e565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f2881611ef3565b8114611f3357600080fd5b50565b600081359050611f4581611f1f565b92915050565b600060208284031215611f6157611f60611e1a565b5b6000611f6f84828501611f36565b91505092915050565b60008115159050919050565b611f8d81611f78565b82525050565b6000602082019050611fa86000830184611f84565b92915050565b6000819050919050565b611fc181611fae565b82525050565b6000602082019050611fdc6000830184611fb8565b92915050565b600060208284031215611ff857611ff7611e1a565b5b600061200684828501611e9e565b91505092915050565b61201881611fae565b811461202357600080fd5b50565b6000813590506120358161200f565b92915050565b60006020828403121561205157612050611e1a565b5b600061205f84828501612026565b91505092915050565b6000806040838503121561207f5761207e611e1a565b5b600061208d85828601612026565b925050602061209e85828601611e9e565b9150509250929050565b600080600080608085870312156120c2576120c1611e1a565b5b60006120d087828801611e40565b94505060206120e187828801611e9e565b93505060406120f287828801611e40565b925050606061210387828801611e9e565b91505092959194509250565b60006020828403121561212557612124611e1a565b5b600061213384828501611e40565b91505092915050565b61214581611e1f565b82525050565b6000602082019050612160600083018461213c565b92915050565b600061217182611e75565b9050919050565b61218181612166565b811461218c57600080fd5b50565b60008135905061219e81612178565b92915050565b6000602082840312156121ba576121b9611e1a565b5b60006121c88482850161218f565b91505092915050565b6000819050919050565b60006121f66121f16121ec84611e55565b6121d1565b611e55565b9050919050565b6000612208826121db565b9050919050565b600061221a826121fd565b9050919050565b61222a8161220f565b82525050565b60006020820190506122456000830184612221565b92915050565b6000806000806080858703121561226557612264611e1a565b5b600061227387828801611e40565b945050602061228487828801611e9e565b935050604061229587828801611e9e565b92505060606122a687828801611e40565b91505092959194509250565b6000806000606084860312156122cb576122ca611e1a565b5b60006122d986828701611e40565b93505060206122ea86828701611e9e565b92505060406122fb86828701611e9e565b9150509250925092565b60008060006060848603121561231e5761231d611e1a565b5b600061232c86828701611e9e565b935050602061233d86828701611e40565b925050604061234e86828701611e9e565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61238d81611e75565b82525050565b600061239f8383612384565b60208301905092915050565b6000602082019050919050565b60006123c382612358565b6123cd8185612363565b93506123d883612374565b8060005b838110156124095781516123f08882612393565b97506123fb836123ab565b9250506001810190506123dc565b5085935050505092915050565b6000602082019050818103600083015261243081846123b8565b905092915050565b61244181611e75565b82525050565b600060208201905061245c6000830184612438565b92915050565b600082825260208201905092915050565b7f556e737570706f7274656420636f6c6c61746572616c00000000000000000000600082015250565b60006124a9601683612462565b91506124b482612473565b602082019050919050565b600060208201905081810360008301526124d88161249c565b9050919050565b60006040820190506124f4600083018561213c565b612501602083018461213c565b9392505050565b60008151905061251781611e29565b92915050565b60006020828403121561253357612532611e1a565b5b600061254184828501612508565b91505092915050565b600060ff82169050919050565b6125608161254a565b811461256b57600080fd5b50565b60008151905061257d81612557565b92915050565b60006020828403121561259957612598611e1a565b5b60006125a78482850161256e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561263657808604811115612612576126116125b0565b5b60018516156126215780820291505b808102905061262f856125df565b94506125f6565b94509492505050565b60008261264f576001905061270b565b8161265d576000905061270b565b8160018114612673576002811461267d576126ac565b600191505061270b565b60ff84111561268f5761268e6125b0565b5b8360020a9150848211156126a6576126a56125b0565b5b5061270b565b5060208310610133831016604e8410600b84101617156126e15782820a9050838111156126dc576126db6125b0565b5b61270b565b6126ee84848460016125ec565b92509050818404811115612705576127046125b0565b5b81810290505b9392505050565b600061271d82611e1f565b91506127288361254a565b92506127557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461263f565b905092915050565b600061276882611e1f565b915061277383611e1f565b925082820261278181611e1f565b91508282048414831517612798576127976125b0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127d982611e1f565b91506127e483611e1f565b9250826127f4576127f361279f565b5b828204905092915050565b60006060820190506128146000830186612438565b6128216020830185612438565b61282e604083018461213c565b949350505050565b600060408201905061284b6000830185612438565b612858602083018461213c565b9392505050565b600061286a82611e1f565b915061287583611e1f565b925082820190508082111561288d5761288c6125b0565b5b92915050565b600061289e82611e1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128d0576128cf6125b0565b5b600182019050919050565b60006040820190506128f06000830185612438565b6128fd6020830184611fb8565b9392505050565b600061290f82611e1f565b915061291a83611e1f565b9250828203905081811115612932576129316125b0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d411b0207c0e33c28c7dc49e299899c9fb89b44775add2224087726fdb3e931864736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "allowCollateral(address)": {
        "params": {
          "collateralAsset": "The address of the collateral asset"
        }
      },
      "assetAmountFromValue(uint256,address)": {
        "params": {
          "asset": "The address of the asset",
          "baseValue": "The base value"
        },
        "returns": {
          "assetAmount": "The amount of the asset"
        }
      },
      "assetValueFromAmount(uint256,address)": {
        "params": {
          "asset": "The address of the asset",
          "assetAmount": "The amount of the asset"
        },
        "returns": {
          "baseValue": "The base value of the asset"
        }
      },
      "deposit(uint256,address)": {
        "params": {
          "collateralAmount": "The amount of collateral to deposit",
          "collateralAsset": "The address of the collateral asset"
        }
      },
      "disallowCollateral(address)": {
        "details": "Requires at least one collateral asset to remain supported",
        "params": {
          "collateralAsset": "The address of the collateral asset to disallow"
        }
      },
      "exchangeCollateral(uint256,address,uint256,address)": {
        "details": "Ensures the exchange maintains equivalent value using oracle prices",
        "params": {
          "fromCollateral": "Address of the source collateral token",
          "fromCollateralAmount": "Amount of collateral to exchange from",
          "toCollateral": "Address of the destination collateral token",
          "toCollateralAmount": "Amount of collateral to receive"
        }
      },
      "exchangeMaxCollateral(uint256,address,address,uint256)": {
        "details": "Calculates and executes the maximum possible exchange while respecting minimum amount",
        "params": {
          "fromCollateral": "Address of the source collateral token",
          "fromCollateralAmount": "Amount of collateral to exchange from",
          "toCollateral": "Address of the destination collateral token",
          "toMinCollateral": "Minimum amount of destination collateral to receive"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isCollateralSupported(address)": {
        "params": {
          "collateralAsset": "The address of the collateral asset to check"
        },
        "returns": {
          "_0": "bool True if the asset is supported, false otherwise"
        }
      },
      "listCollateral()": {
        "returns": {
          "_0": "address[] Array of collateral asset addresses"
        }
      },
      "maxExchangeAmount(uint256,address,address)": {
        "details": "Uses oracle prices and token decimals to maintain equivalent value",
        "params": {
          "fromCollateral": "Address of the source collateral token",
          "fromCollateralAmount": "Amount of source collateral",
          "toCollateral": "Address of the destination collateral token"
        },
        "returns": {
          "toCollateralAmount": "The maximum amount of destination collateral that can be received"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setBaseCurrencyUnit(uint256)": {
        "details": "Only used if the oracle's base currency unit changes",
        "params": {
          "_newBaseCurrencyUnit": "The new base currency unit to set"
        }
      },
      "setOracle(address)": {
        "params": {
          "newOracle": "The new oracle to use"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "totalValue()": {
        "returns": {
          "baseValue": "The total value of all collateral in base"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "collateralAmount": "The amount of collateral to withdraw",
          "collateralAsset": "The address of the collateral asset"
        }
      },
      "withdrawTo(address,uint256,address)": {
        "params": {
          "collateralAmount": "The amount of collateral to withdraw",
          "collateralAsset": "The address of the collateral asset",
          "recipient": "The address receiving the collateral"
        }
      }
    },
    "title": "CollateralHolderVault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowCollateral(address)": {
        "notice": "Allows a new collateral asset"
      },
      "assetAmountFromValue(uint256,address)": {
        "notice": "Calculates the amount of an asset that corresponds to a given base value"
      },
      "assetValueFromAmount(uint256,address)": {
        "notice": "Calculates the base value of a given amount of an asset"
      },
      "deposit(uint256,address)": {
        "notice": "Deposit collateral into the vault"
      },
      "disallowCollateral(address)": {
        "notice": "Disallows a previously supported collateral asset"
      },
      "exchangeCollateral(uint256,address,uint256,address)": {
        "notice": "Exchanges one type of collateral for another"
      },
      "exchangeMaxCollateral(uint256,address,address,uint256)": {
        "notice": "Exchanges collateral for the maximum possible amount of another collateral"
      },
      "isCollateralSupported(address)": {
        "notice": "Checks if a given asset is supported as collateral"
      },
      "listCollateral()": {
        "notice": "Returns a list of all supported collateral assets"
      },
      "maxExchangeAmount(uint256,address,address)": {
        "notice": "Calculates the maximum amount of destination collateral that can be received"
      },
      "setBaseCurrencyUnit(uint256)": {
        "notice": "Updates the base currency unit used for price calculations"
      },
      "setOracle(address)": {
        "notice": "Sets the oracle to use for collateral valuation"
      },
      "totalValue()": {
        "notice": "Calculates the total value of all collateral in the vault"
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws collateral from the vault"
      },
      "withdrawTo(address,uint256,address)": {
        "notice": "Withdraws collateral from the vault to a specific address"
      }
    },
    "notice": "Implementation of CollateralVault for only holding tokens",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2521,
        "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)2516_storage)"
      },
      {
        "astId": 15108,
        "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPriceOracleGetter)12694"
      },
      {
        "astId": 15110,
        "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
        "label": "baseCurrencyUnit",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 14108,
        "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
        "label": "_supportedCollaterals",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(AddressSet)12361_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IPriceOracleGetter)12694": {
        "encoding": "inplace",
        "label": "contract IPriceOracleGetter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)2516_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)2516_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)12361_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 12360,
            "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)12046_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoleData)2516_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 2513,
            "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 2515,
            "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)12046_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 12041,
            "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 12045,
            "contract": "contracts/dstable/CollateralHolderVault.sol:CollateralHolderVault",
            "label": "_positions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}